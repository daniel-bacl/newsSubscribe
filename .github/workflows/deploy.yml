name: Deploy Spring Boot App

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew bootJar

      - name: Copy jar to EC2 via SCP
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "build/libs/*.jar"
          target: "/tmp/new-app.jar"

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            mkdir -p /home/ubuntu/app/backup
            cd /home/ubuntu/app

            if [ -f ./stop.sh ]; then
              ./stop.sh
            fi

            if [ -f ./app.jar ]; then
              cp app.jar ./backup/app-$(date +%F-%T).jar
              rm -f app.jar
            fi

            mv /tmp/new-app.jar ./app.jar

            if [ -f ./start.sh ]; then
              ./start.sh
            else
              nohup java -jar ./app.jar > app.log 2>&1 &
            fi
