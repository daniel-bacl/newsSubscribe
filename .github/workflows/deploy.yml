name: CI/CD to EKS

on:
  push:
    branches: [main]

env:
  AWS_REGION: ap-northeast-2
  ECR_REPO: ${{ secrets.ECR_REPO }}
  EKS_CLUSTER_NAME: news-cluster

jobs:
  rollout-deploy:
    name: Build & Deploy Spring App via Argo Rollouts (auto-promotion)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker image to ECR
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:latest
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.32.0

      - name: Configure kubeconfig dynamically
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

      - name: Debug AWS and kubectl connectivity
        run: |
          aws sts get-caller-identity
          kubectl version
          kubectl get nodes || true

      - name: Install Argo Rollouts
        run: |
          kubectl apply -f https://github.com/argoproj/argo-rollouts/releases/latest/download/install.yaml --validate=false

      - name: Create Kubernetes Secret for Spring Env
        run: |
          kubectl delete secret spring-secret --ignore-not-found
          kubectl create secret generic spring-secret \
            --from-literal=DB_HOST=${{ secrets.DB_HOST }} \
            --from-literal=DB_PORT=${{ secrets.DB_PORT }} \
            --from-literal=DB_NAME=${{ secrets.DB_NAME }} \
            --from-literal=DB_USERNAME=${{ secrets.DB_USERNAME }} \
            --from-literal=DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --from-literal=MAIL_HOST=${{ secrets.MAIL_HOST }} \
            --from-literal=MAIL_USERNAME=${{ secrets.MAIL_USERNAME }} \
            --from-literal=MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}

      - name: Deploy Argo Rollouts and Services
        run: |
          kubectl apply -f k8s/
