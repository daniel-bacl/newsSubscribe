name: Deploy to EKS via Argo Rollouts

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2
  ECR_REGISTRY: 635140758252.dkr.ecr.ap-northeast-2.amazonaws.com
  ECR_REPOSITORY: spring-app
  IMAGE_TAG: v1.0.${{ github.run_number }}
  CLUSTER_NAME: news-cluster

jobs:
  rollout-deploy:
    name: Build & Deploy Spring App via Argo Rollouts (auto-promotion)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY:${{ env.IMAGE_TAG }} .
          docker tag $ECR_REPOSITORY:${{ env.IMAGE_TAG }} $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.IMAGE_TAG }}

      - name: Push Docker image to ECR
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.IMAGE_TAG }}

      - name: Create Kubernetes Secret for Spring Env
        run: |
          kubectl delete secret spring-secret --ignore-not-found || true
          kubectl create secret generic spring-secret \
            --from-literal=DB_HOST=${{ secrets.DB_HOST }} \
            --from-literal=DB_PORT=${{ secrets.DB_PORT }} \
            --from-literal=DB_NAME=${{ secrets.DB_NAME }} \
            --from-literal=DB_USERNAME=${{ secrets.DB_USERNAME }} \
            --from-literal=DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --from-literal=MAIL_HOST=${{ secrets.MAIL_HOST }} \
            --from-literal=MAIL_USERNAME=${{ secrets.MAIL_USERNAME }} \
            --from-literal=MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}

      - name: Set image tag in rollout.yaml
        run: |
          sed -i "s|\(image: $ECR_REGISTRY/$ECR_REPOSITORY:\).*|\1${{ env.IMAGE_TAG }}|" k8s/rollout.yaml
          sed -i "s|\(version:\).*|\1 ${{ env.IMAGE_TAG }}|" k8s/rollout.yaml

      - name: Install Argo Rollouts CRDs
        run: |
          kubectl apply -f https://github.com/argoproj/argo-rollouts/releases/latest/download/install.yaml

      - name: Deploy rollout to EKS
        run: |
          kubectl apply -f k8s/spring-active.yaml
          kubectl apply -f k8s/spring-preview.yaml
          kubectl apply -f k8s/argo-rollouts-rbac.yaml
          kubectl apply -f k8s/rollout.yaml
          kubectl apply -f k8s/spring-ingress.yaml

      - name: Show Ingress ALB URL
        run: |
          INGRESS_HOST=$(kubectl get ingress spring-ingress -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          echo "::set-output name=alb_url::http://$INGRESS_HOST"
        id: ingress

      - name: Comment Ingress URL on PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ðŸš€ **Ingress ALB Endpoint**
            Your app is deployed and accessible at:
            [${{ steps.ingress.outputs.alb_url }}](${{ steps.ingress.outputs.alb_url }})
